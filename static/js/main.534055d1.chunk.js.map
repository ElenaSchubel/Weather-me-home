{"version":3,"sources":["index.js"],"names":["activities","teamIn","teamOutWarm","teamOutCold","soloIn","soloOutWarm","soloOutCold","state","category","updateActivityList","event","undefined","target","classList","contains","updateState","type","_state$activities","push","apply","Object","_home_elena_projects_weather_me_home_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","_state$activities2","_state$activities3","_state$activities4","id","document","querySelectorAll","forEach","el","remove","add","condition","degFInt","into","querySelector","activitiesContainer","createElement","list","activity","index","listItem","setAttribute","textContent","appendChild","replaceChild","addEventListener","e","preventDefault","location","value","fetch","then","response","json","degC","main","temp","degCInt","Math","floor","degF","weather","icon","city","name","container","cityPara","conditionsPara","concat","iconImage","updateUISuccess","catch"],"mappings":"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","file":"static/js/main.534055d1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n(function() {\n\tconst url = \"http://api.openweathermap.org/data/2.5/weather?q=\";\n\tconst apiKey = \"c7f8d1ff04530c06077e107bb5c759ed\"; // Replace \"APIKEY\" with your own API key; otherwise, your HTTP request will not work\n\tconst activities = {\n\t\tteamIn: ['basketball','hockey','volleyball'],\n\t\tteamOutWarm: ['softball/baseball','football/soccer','American football','rowing','tennis','volleyball','ultimate frisbee','rugby'],\n\t\tteamOutCold: ['hockey'],\n\t\tsoloIn: ['rock climbing','swimming','ice skating'],\n\t\tsoloOutWarm: ['rowing','running','hiking','cycling','rock climbing'],\n\t\tsoloOutCold: ['snowshoeing','downhill skiing','cross-country skiing','ice skating']\n\t}\n\tlet state = {};\n\tlet category = 'all';\n\n\t// get weather data when user clicks Forecast button, then add temp & conditions to view\n//\t$('.forecast-button').click(function(e) {\n\tdocument.querySelector('.forecast-button').addEventListener('click', function(e) {\n\t\te.preventDefault();\n//\t\tconst location = $('#location').val();\n\t\tconst location = document.querySelector('#location').value;\n//\t\t$('#location').val('');\n\t\tdocument.querySelector('#location').value = '';\n/*\n\t\t$.get(url + location + '&appid=' + apiKey).done(function(response) {\n\t\t\tupdateUISuccess(response);\n\t\t}).fail(function() {\n\t\t\tupdateUIFailure();\n\t\t});\n*/\n\n\t\tfetch(url + location + '&appid=' + apiKey).then(function(response) {\n\t\t\treturn(response.json());\n\t\t}).then(function(response) {\n\t\t\tupdateUISuccess(response);\n\t\t}).catch(function() {\n\t\t\tupdateUIFailure();\n\t\t});\n\t}, false);\n\n\t// update list of sports when user selects a different category (solo/team/all)\n\t//$('.options div').on('click', updateActivityList);\n\tdocument.querySelectorAll('.options div').forEach(function(el) {\n\t\tel.addEventListener('click', updateActivityList, false);\n\t});\n\n\t// handle ajax success\n\tfunction updateUISuccess(response) {\n\t\tconst degC = response.main.temp - 273.15;\n\t\tconst degCInt = Math.floor(degC);\n\t\tconst degF = degC * 1.8 + 32;\n\t\tconst degFInt = Math.floor(degF);\n\t\tstate = {\n\t\t\tcondition: response.weather[0].main,\n\t\t\ticon: \"http://openweathermap.org/img/w/\" + response.weather[0].icon + \".png\",\n\t\t\tdegCInt: Math.floor(degCInt),\n\t\t\tdegFInt: Math.floor(degFInt),\n\t\t\tcity: response.name\n\t\t};\n\n//\t\tconst $into = $('.conditions')[0];\n\t\tconst into = document.querySelector('.conditions');\n\n//\t\tReactDOM.render(<Forecast {...state} />, $into);\n//\t\tReactDOM.render(<Forecast {...state} />, into);\n\n/*\n\t\tfunction Forecast(props) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<p className=\"city\">{props.city}</p>\n\t\t\t\t\t<p>{props.degCInt}&#176; C / {props.degFInt}&#176; F <img src={props.icon} alt={props.condition} /></p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n*/\n\n\t\tlet container = document.createElement('div');\n\t\tlet cityPara = document.createElement('p');\n\t\tcityPara.setAttribute('class','city');\n\t\tcityPara.textContent = state.city;\n\t\tlet conditionsPara = document.createElement('p');\n\t\t//\t\tconditionsPara.textContent = state.degCInt + '\\u00B0 C / ' + state.degFInt + '\\u00B0 F';\n\t\tconditionsPara.textContent = `${state.degCInt}\\u00B0 C / ${state.degFInt}\\u00B0 F`;\n\t\tlet iconImage = document.createElement('img');\n\t\ticonImage.setAttribute('src', state.icon);\n\t\ticonImage.setAttribute('alt', state.condition);\n\t\tconditionsPara.appendChild(iconImage);\n\t\tcontainer.appendChild(cityPara);\n\t\tcontainer.appendChild(conditionsPara);\n\t\tif (document.querySelector('.conditions div')) {\n\t\t\tinto.replaceChild(container, document.querySelector('.conditions div'));\n\t\t} else {\n\t\t\tinto.appendChild(container);\n\t\t}\n\n\t\tupdateActivityList();\n\t}\n\n\t// handle selection of a new category (team/solo/all)\n\tfunction updateActivityList(event) {\n//\t\tif (event !== undefined && $(this).hasClass('selected')) {\n\t\tif (event !== undefined && event.target.classList.contains('selected')) {\n\t\t\t// if the 'event' parameter is defined, then a tab has been clicked; if not, then this is the\n\t\t\t//   default case and the view simply needs to be updated\n\t\t\t// if the clicked tab has the class 'selected', then no need to change location of 'selected' class\n\t\t\t//   or change the DOM\n\t\t\treturn true;\n//\t\t} else if (event !== undefined && !$(this).hasClass('selected')) {\n\t\t} else if (event !== undefined && !event.target.classList.contains('selected')) {\n\t\t\t// if the 'event' parameter is defined, then a tab has been clicked\n\t\t\t// if the clicked tab does not have the class 'selected', then location of 'selected' class must be added\n\t\t\t//   to the clicked element and removed from its siblings\n//\t\t\tcategory = $(this).attr('id');\n\t\t\tcategory = event.target.id;\n\n//\t\t\t$('.options div').removeClass('selected');\n\n\t\t\tdocument.querySelectorAll('.options div').forEach(function(el) {\n\t\t\t\tel.classList.remove('selected');\n\t\t\t});\n\n//\t\t\t$(this).addClass('selected');\n\t\t\tevent.target.classList.add('selected');\n\t\t}\n\n\t\tstate.activities = [];\n\t\tif (state.condition === \"Rain\") {\n\t\t\tupdateState('In');\n\t\t} else if (state.condition === \"Snow\" || state.degFInt < 50) {\n\t\t\tupdateState('OutCold');\n\t\t} else {\n\t\t\tupdateState('OutWarm');\n\t\t}\n\n\t\tfunction updateState(type) {\n\t\t\tif (category === \"solo\") {\n\t\t\t\tstate.activities.push(...activities['solo' + type]);\n\t\t\t} else if (category === \"team\") {\n\t\t\t\tstate.activities.push(...activities['team' + type]);\n\t\t\t} else {\n\t\t\t\tstate.activities.push(...activities['solo' + type]);\n\t\t\t\tstate.activities.push(...activities['team' + type]);\n\t\t\t}\n\t\t}\n\n//\t\tconst $into = $('.activities')[0];\n\t\tconst into = document.querySelector('.activities');\n\n//\t\tReactDOM.render(<Activities {...state} />, $into);\n//\t\tReactDOM.render(<Activities {...state} />, into);\n\n/*\n\t\tfunction Activities(props) {\n\t\t\tconst activitiesList = props.activities.map(function(activity, index) {\n\t\t\t\treturn <li key={index}>{activity}</li>\n\t\t\t});\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<ul>{activitiesList}</ul>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n*/\n\n\t\tlet activitiesContainer = document.createElement('div');\n\t\tlet list = document.createElement('ul');\n\t\tstate.activities.forEach(function(activity,index) {\n\t\t\tlet listItem = document.createElement('li');\n\t\t\tlistItem.setAttribute('key', index);\n\t\t\tlistItem.textContent = activity;\n\t\t\tlist.appendChild(listItem);\n\t\t});\n\t\tactivitiesContainer.appendChild(list);\n\t\tif (document.querySelector('.activities div')) {\n\t\t\tinto.replaceChild(activitiesContainer, document.querySelector('.activities div'));\n\t\t} else {\n\t\t\tinto.appendChild(activitiesContainer);\n\t\t}\n\n//\t\t$('.results').slideDown(300);\n\t\tdocument.querySelector('.results').classList.add('open');\n\t}\n\n\t// handle ajax failure\n\tfunction updateUIFailure() {\n//\t\t$(\".conditions\").text(\"Weather information unavailable\");\n\t\tdocument.querySelector(\".conditions\").textContent = \"Weather information unavailable\";\n\t}\n})();\n"],"sourceRoot":""}